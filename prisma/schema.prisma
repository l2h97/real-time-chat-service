// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int          @id @default(autoincrement())
  email          String       @unique
  firstName      String
  lastName       String
  fullName       String
  status         UserStatus   @default(ACTIVE)
  isVerified     Boolean      @default(false)
  isPublish      Boolean      @default(false)
  profileImageId Int
  coverImageId   Int?
  salt           String?
  passwordHashed String?
  refreshToken   String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now())
  deletedAt      DateTime?
  profileImage   Media        @relation(name: "profile", fields: [profileImageId], references: [id])
  coverImage     Media?       @relation(name: "cover", fields: [coverImageId], references: [id])
  mediaUploaded  Media[]
  requestUser    FriendList[] @relation(name: "requestFriend")
  approveUser    FriendList[] @relation(name: "approveFriend")
}

model Media {
  id          Int       @id @default(autoincrement())
  code        String?
  url         String
  type        MediaType @default(IMAGE)
  userId      Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  createdBy   User?     @relation(fields: [userId], references: [id])
  userProfile User[]    @relation(name: "profile")
  userCover   User[]    @relation(name: "cover")
}

model FriendList {
  id            Int              @id @default(autoincrement())
  requestUserId Int
  approveUserId Int
  status        FriendListStatus @default(PENDING)
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @default(now())
  requestUser   User             @relation(name: "requestFriend", fields: [requestUserId], references: [id])
  approveUser   User             @relation(name: "approveFriend", fields: [approveUserId], references: [id])
}

enum FriendListStatus {
  PENDING
  APPROVE
  REMOVE
}

enum UserStatus {
  ACTIVE
  SLEEP
  BLOCK
}

enum MediaType {
  IMAGE
  VIDEO
}
